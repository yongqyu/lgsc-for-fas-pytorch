#device: &device cpu

loss_coef:  # coefficients for losses
  clf_loss: 5.0
  reg_loss: 5.0
  trip_loss: 1.0

# TODO: config for optimizer
lr: 0.0001  # optimizer lr
# TODO: config for scheduler
milestones:  # MultiStepLR scheduler params
  - 5
  - 8
  - 12
gamma: 0.3

image_size: 224  # size of input image
cue_log_every: 1000  # will log cues every cue_log_every batches. If 0, than won't log

# uncomment this, to use online face cropping
# however it is not recommended
# you can only use cpu device as device for face-cropping nn
#face_detector:
#  image_size: 512
#  margin: 100
#  min_face_size: 100
#  thresholds: [0.6, 0.7, 0.7]
#  factor: 0.709
#  device: *device

train_root_tang: '/data/project/rw/datatang_sample/preprocess/'  # prefix path to your images
val_root_tang: '/data/project/rw/datatang_sample/tang_test_sample/'  # path to validation csv file
# train_root: '/data/private/FF/V2/train/'
# val_root: '/data/private/FF/V2/valid/'
train_root_oulu: '/data/project/rw/oulu/preprocessed/Train_depth/full/image/'
val_root_oulu: '/data/project/rw/oulu/preprocessed/Dev_depth/full/image/'
val_root_kp: '/data/project/rw/kakaopay/preprocess/kp_test_sample/'

batch_size: 32 # 96  # batch size for both validation and train dataloader
num_workers_train: 3  # param for training dataloader
num_workers_val: 3  # param for validation dataloader

default_root_dir: null  # path to save pytorch_lightning logs
max_epochs: 50  # max number of epochs to train (if doesn't achieved early stopping)

use_balance_sampler: False  # You can try overcome class disbalance using balance sampler
use_focal_loss: False  # You can try use focal loss instead of cross-entropy loss
